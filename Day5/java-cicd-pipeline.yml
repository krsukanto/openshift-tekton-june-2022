# Reserve 500MB disk space for Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tektutor-tekton-pv-jegan
  labels:
    name: jegan
spec:
  capacity:
    storage: 500Mi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: "192.168.1.80"
    path: "/mnt/maven"
---
# Request for 500MB disk space
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tektutor-tekton-pvc-jegan
  labels:
    name: jegan
spec:
  selector:
    matchLabel:
      name: jegan
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: java-tekton-cicd-pipeline
spec:
  workspaces:
  - name: source-code
  - name: maven-repo
  tasks:
  - name: clone-git-repo
    params:
    - name: url
      value: 'https://github.com/tektutor/hello-spring-boot.git'
    - name: revision
      value: main
    taskRef:
      kind: Task
      name: git-clone
    workspaces:
    - name: output
      workspace: source-code

  - name: compile
    params:
      - name: GOALS
        value: 
        - -Dmaven.repo.local=$(workspaces.maven-settings.path)
        - clean
        - compile 
    runAfter:
    - clone-git-repo
    taskRef:
      name: maven
    workspaces:
    - name: source
      workspace: source-code
    - name: maven-settings
      workspace: maven-repo 

  - name: unit-test 
    params:
      - name: GOALS
        value: 
        - -Dmaven.repo.local=$(workspaces.maven-settings.path)
        - test 
    runAfter:
    - compile
    taskRef:
      name: maven
    workspaces:
    - name: source
      workspace: source-code
    - name: maven-settings
      workspace: maven-repo
  - name: package 
    params:
      - name: GOALS
        value: 
        - -Dmaven.repo.local=$(workspaces.maven-settings.path)
        - package 
    runAfter:
    - unit-test 
    taskRef:
      name: maven
    workspaces:
    - name: source
      workspace: source-code
    - name: maven-settings
      workspace: maven-repo 
---
---
# PipelineRun - provides all required parameters to the Pipeline
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: java-tekton-cicd-pipline-run
spec:
  pipelineRef:
    name: java-tekton-cicd-pipeline
  serviceAccountName: default
  workspaces:
  - name: source-code
    persistentVolumeClaim:
      claimName: tektutor-tekton-pvc-jegan 
    subPath: source 
  - name: maven-repo
    persistentVolumeClaim:
      claimName: tektutor-tekton-pvc-jegan 
    subPath: m2
